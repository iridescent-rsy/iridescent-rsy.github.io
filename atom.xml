<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://iridescent-rsy.github.io/</id>
    <title>irides</title>
    <updated>2019-09-02T03:24:31.958Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://iridescent-rsy.github.io/"/>
    <link rel="self" href="https://iridescent-rsy.github.io//atom.xml"/>
    <subtitle>c&apos;est la vie...</subtitle>
    <logo>https://iridescent-rsy.github.io//images/avatar.png</logo>
    <icon>https://iridescent-rsy.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, irides</rights>
    <entry>
        <title type="html"><![CDATA[[已解决] Manjaro 18.0.4 + 搜狗拼音 崩溃]]></title>
        <id>https://iridescent-rsy.github.io//post/jie-jue-manjaro-1804-sou-gou-pin-yin-beng-kui</id>
        <link href="https://iridescent-rsy.github.io//post/jie-jue-manjaro-1804-sou-gou-pin-yin-beng-kui">
        </link>
        <updated>2019-08-01T09:33:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="问题">问题</h3>
<p>Manjaro系统装好之后，直接用了 <code>pacman -S fcitx-sogoupinyin</code> 来安装搜狗拼音输入法。</p>
<p>但是切换到搜狗时，不仅没法打出中文，还提示崩溃：</p>
<blockquote>
<p>搜狗输入法异常！请删除.config/SogouPY 并重启</p>
</blockquote>
<p>即便照做了，也还是没用，崩溃依旧。</p>
<h4 id="解决">解决</h4>
<p>安装fcitx-qt4：<code>pacman -S fcitx-qt4</code>。<br>
会提示和 fcitx 这个包有冲突，虽然不知道为什么，但是还是强制安装吧。</p>
<p>恩，就这...... 感觉应该是因为fcitx默认使用了qt5的框架，而搜狗输入法还是qt4。<br>
其实好像去年也遇到这个问题的，当时还解决了。可是记性不好，怎么也想不起来了。还是记下来为好。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[误删文件了...]]></title>
        <id>https://iridescent-rsy.github.io//post/wu-shan-wen-jian-liao</id>
        <link href="https://iridescent-rsy.github.io//post/wu-shan-wen-jian-liao">
        </link>
        <updated>2019-07-15T05:05:45.000Z</updated>
        <content type="html"><![CDATA[<p>我在测试环境写了几个脚本，脚本的输出文件也在相同的目录下。<br>
通常，脚本执行后输出文件会有多个，并且以相同的几个字符开头，所以一般直接用 <code>rm xxx*</code> 删去输出文件。<br>
但是，这次输出文件只有一个，结果删除时候输命令太快，加上 TAB 补全，命令变成了 <code>rm xxx1 *</code>：zsh 下 TAB 补全了这唯一的文件名，并在后面加了个空格。再带上通配符 *，GG，把目录下除了文件夹的所有文件都给删了.....包括我辛辛苦苦写的脚本本身......</p>
<p>网上找到的一般有两种方法：</p>
<ol>
<li>
<p>ext3 恢复工具</p>
</li>
<li>
<p>grep 恢复法</p>
<pre><code class="language-bash"># -a是把磁盘已文本格式处理 -B n1是前n1行 -A n2是后n2行 输出到result文件中
grep -a -B n1 -A n2 &quot;partly contents in my script&quot; /dev/your_device &gt; /another/path/to/save/result
</code></pre>
<p>因为我编辑、保存过多次，所以这个恢复方法会从磁盘中找到多份数据，至于哪个是最新的，需要自己去result中找。</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Qemu] 网络配置]]></title>
        <id>https://iridescent-rsy.github.io//post/qemu-wang-luo-pei-zhi</id>
        <link href="https://iridescent-rsy.github.io//post/qemu-wang-luo-pei-zhi">
        </link>
        <updated>2019-07-15T05:01:48.000Z</updated>
        <content type="html"><![CDATA[<h2 id="网络">网络</h2>
<ul>
<li>借用 libvirt 创建的虚拟网桥，建立网络通道</li>
</ul>
<p>需求：命令行启动虚机、虚机 mount 宿主 NFS</p>
<p>问题：（抄的网上的命令行参数）网络用了 -net nic 来 NAT</p>
<pre><code class="language-bash">qemu-system-x86_64 \
# ... 省略
-net nic \
-net user,hostfwd=tcp::2222-:22 \
# ... 省略
</code></pre>
<p>虚机为 10.0.2.15，宿主为 10.0.2.2，虚机直接通过 IP 访问宿主，而宿主通过端口转发来与虚机通信，可以互通。但是，虚机却不能 mount 宿主机的 NFS（宿主机已修改 nfs 网络权限）</p>
<p>至于原因，暂时没有深究。<strong>// TODO</strong></p>
<p>转而想使用之前用 virtsh 时候那样的网桥。配置方法详见 <a href="https://www.linux-kvm.org/page/Networking">Wiki - kvm/networking</a></p>
<p>这里我借用了 libvirt 创建的网桥 <code>virbr0</code>，这样通过 virtsh 启动时，网段不会改变，NFS 也能自动 mount 成功。</p>
<p>通过查看网卡可以发现，<code>virbr0</code> 并不是一直 <code>UP</code>，而是在需要的时候，比如 virsh 启动虚机的时候才使能。所以需要一个脚本，让 qemu 起虚机的时候使能这个网卡。</p>
<pre><code class="language-bash">#!/bin/sh
# -x 开启 DEBUG，执行时输出执行内容
set -x

switch=virbr0

if [ -n &quot;$1&quot; ];then
        # tunctl -u `whoami` -t $1 (use ip tuntap instead!)
        ip tuntap add $1 mode tap user `whoami`
        ip link set $1 up
        sleep 0.5s
        # brctl addif $switch $1 (use ip link instead!)
        ip link set $1 master $switch
        exit 0
else
        echo &quot;Error: no interface specified&quot;
        exit 1
fi
</code></pre>
<p>保存起来。还需要一个随机的 MAC 地址，至少要和使用了这个网卡的其他机器不同。</p>
<pre><code class="language-bash"># generate a random mac address for the qemu nic
printf 'DE:AD:BE:EF:%02X:%02X\n' $((RANDOM%256)) $((RANDOM%256))
</code></pre>
<p>至此，准备工作完成，接下来修改 qemu 参数。</p>
<pre><code class="language-bash">qemu-system-x86_64 \
# ... 省略
-device rtl8139,netdev=net0,mac=$macaddress # -net nic \
-netdev tap,id=net0,script=/path/to/qemu-ifup #-net user,hostfwd=tcp::2222-:22 \
# ... 省略
</code></pre>
<p>完事儿。</p>
<h3 id="远程管理">远程管理</h3>
<ul>
<li>用一台机器B专门跑虚拟机
<ul>
<li>Manjaro Linux</li>
<li>Libvirt</li>
</ul>
</li>
</ul>
<h5 id="从a移动虚机到b">从A移动虚机到B</h5>
<ol>
<li>导出 xml 定义文件，复制到B</li>
<li>拷贝磁盘文件到B</li>
<li>修改xml文件中，磁盘路径等内容</li>
<li>virsh define xxx.xml，导入虚机</li>
</ol>
<ul>
<li>导入完成后，启动虚机时，无法访问磁盘镜像，permission denied
<ul>
<li>将用户添加到 libvirt 和 kvm 组</li>
<li>修改 /etc/libvirt/qemu.conf 中，<code>user</code> 和 <code>group</code> 项为 '用户名' 和 'kvm'</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Qemu] 升级版本(编译安装)]]></title>
        <id>https://iridescent-rsy.github.io//post/qemu</id>
        <link href="https://iridescent-rsy.github.io//post/qemu">
        </link>
        <updated>2019-07-15T04:57:33.000Z</updated>
        <content type="html"><![CDATA[<h2 id="升级">升级</h2>
<p>参考自 <a href="https://askubuntu.com/questions/1067722/how-do-i-install-qemu-3-0-on-ubuntu-18-04">How do I install QEMU 3.0 on ubuntu 18.04?</a></p>
<h4 id="移除系统中旧版本的-qemu">移除系统中旧版本的 qemu</h4>
<pre><code class="language-bash">sudo apt-get purge &quot;qemu*&quot;
sudo apt-get autoremove
</code></pre>
<h4 id="安装-qemu-源码编译环境">安装 qemu 源码编译环境</h4>
<p>We should start by installing its build-dependencies - at first enable <em>Source Code</em> repositories in <em>Software and Updates</em> (<code>software-properties-gtk</code>), and then:</p>
<pre><code class="language-bash">sudo apt-get build-dep qemu
</code></pre>
<h4 id="下载源码并编译">下载源码并编译</h4>
<pre><code class="language-bash">cd ~/Downloads
wget https://download.qemu.org/qemu-3.0.0.tar.xz
tar -xf qemu-3.0.0.tar.xz
cd qemu-3.0.0/
./configure --enable-spice
make
</code></pre>
<ul>
<li>注意这里要使能 spice，否则开启虚拟机时会报错</li>
</ul>
<h4 id="打包">打包</h4>
<p>and then use <a href="https://help.ubuntu.com/community/CheckInstall"><code>checkinstall</code></a>:</p>
<pre><code class="language-bash">sudo apt-get install checkinstall
sudo checkinstall make install
sudo apt-get install ./*.deb
</code></pre>
<p>if you want to remove it - remove its packages as usual.</p>
]]></content>
    </entry>
</feed>